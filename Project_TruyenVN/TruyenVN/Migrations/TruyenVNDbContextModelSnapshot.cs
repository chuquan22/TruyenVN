// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TruyenVNAPI.Model;

#nullable disable

namespace TruyenVN.Migrations
{
    [DbContext(typeof(TruyenVNDbContext))]
    partial class TruyenVNDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TruyenVN.StoryCategory", b =>
                {
                    b.Property<int>("cate_id")
                        .HasColumnType("int");

                    b.Property<int>("story_id")
                        .HasColumnType("int");

                    b.HasKey("cate_id", "story_id");

                    b.HasIndex("story_id");

                    b.ToTable("StoryCategories");
                });

            modelBuilder.Entity("TruyenVNAPI.Model.Author", b =>
                {
                    b.Property<int>("author_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("author_id"), 1L, 1);

                    b.Property<string>("author_description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("author_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("author_id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("TruyenVNAPI.Model.Category", b =>
                {
                    b.Property<int>("cate_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cate_id"), 1L, 1);

                    b.Property<string>("cate_description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("cate_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("cate_id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TruyenVNAPI.Model.Chapter", b =>
                {
                    b.Property<int>("chapter_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("chapter_id"), 1L, 1);

                    b.Property<int>("chapter_number")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("story_id")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.HasKey("chapter_id");

                    b.HasIndex("story_id");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("TruyenVNAPI.Model.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("chapter_id")
                        .HasColumnType("int");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("send_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("chapter_id");

                    b.HasIndex("user_id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("TruyenVNAPI.Model.Story", b =>
                {
                    b.Property<int>("story_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("story_id"), 1L, 1);

                    b.Property<int>("View")
                        .HasColumnType("int");

                    b.Property<int>("author_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("story_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("story_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.HasKey("story_id");

                    b.HasIndex("author_id");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("TruyenVNAPI.Model.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TruyenVNAPI.Model.Viewed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("chapter_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_view")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("chapter_id");

                    b.HasIndex("user_id");

                    b.ToTable("Vieweds");
                });

            modelBuilder.Entity("TruyenVN.StoryCategory", b =>
                {
                    b.HasOne("TruyenVNAPI.Model.Category", null)
                        .WithMany("StoryCategories")
                        .HasForeignKey("cate_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruyenVNAPI.Model.Story", null)
                        .WithMany("StoryCategories")
                        .HasForeignKey("story_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TruyenVNAPI.Model.Chapter", b =>
                {
                    b.HasOne("TruyenVNAPI.Model.Story", "Stories")
                        .WithMany("Chapters")
                        .HasForeignKey("story_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stories");
                });

            modelBuilder.Entity("TruyenVNAPI.Model.Report", b =>
                {
                    b.HasOne("TruyenVNAPI.Model.Chapter", "Chapters")
                        .WithMany()
                        .HasForeignKey("chapter_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruyenVNAPI.Model.User", "Users")
                        .WithMany("Reports")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapters");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TruyenVNAPI.Model.Story", b =>
                {
                    b.HasOne("TruyenVNAPI.Model.Author", "Authors")
                        .WithMany("Stories")
                        .HasForeignKey("author_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Authors");
                });

            modelBuilder.Entity("TruyenVNAPI.Model.Viewed", b =>
                {
                    b.HasOne("TruyenVNAPI.Model.Chapter", "Chapter")
                        .WithMany("Vieweds")
                        .HasForeignKey("chapter_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruyenVNAPI.Model.User", "User")
                        .WithMany("Vieweds")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TruyenVNAPI.Model.Author", b =>
                {
                    b.Navigation("Stories");
                });

            modelBuilder.Entity("TruyenVNAPI.Model.Category", b =>
                {
                    b.Navigation("StoryCategories");
                });

            modelBuilder.Entity("TruyenVNAPI.Model.Chapter", b =>
                {
                    b.Navigation("Vieweds");
                });

            modelBuilder.Entity("TruyenVNAPI.Model.Story", b =>
                {
                    b.Navigation("Chapters");

                    b.Navigation("StoryCategories");
                });

            modelBuilder.Entity("TruyenVNAPI.Model.User", b =>
                {
                    b.Navigation("Reports");

                    b.Navigation("Vieweds");
                });
#pragma warning restore 612, 618
        }
    }
}
